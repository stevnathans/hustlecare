generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     String @default("user")

  comments   Comment[]
  reviews    Review[]
  savedLists SavedList[]
  cartItems  CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SavedList {
  id        String   @id @default(uuid())
  userId    String
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model CartItem {
  id        String   @id @default(uuid())
  userId    String
  productId Int
  quantity  Int      @default(1)
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model Business {
  id          Int           @id @default(autoincrement())
  slug        String        @unique
  name        String        
  description String?
  image       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  requirements Requirement[]
}

model Requirement {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  image       String?
  category    String?
  necessity   String
  businessId  Int
  business    Business  @relation(fields: [businessId], references: [id])
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id            Int         @id @default(autoincrement())
  content       String
  requirementId Int
  userId        String
  requirement   Requirement @relation(fields: [requirementId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float?
  image       String?
  savedLists  SavedList[]
  cartItems   CartItem[]
  reviews     Review[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
